[1mdiff --git a/src/schemas/clientSchema.ts b/src/schemas/clientSchema.ts[m
[1mindex 2be6ebf..5187b05 100644[m
[1m--- a/src/schemas/clientSchema.ts[m
[1m+++ b/src/schemas/clientSchema.ts[m
[36m@@ -8,7 +8,7 @@[m [mexport const newClientSchema = z.object({[m
   cidade: z.string().nonempty('Informe a cidade do cliente'),[m
   bairro: z.string().nonempty('Informe o bairro do cliente'),[m
   logradouro: z.string().nonempty('Informe a rua do cliente'),[m
[31m-  numero: z.string().nonempty('Informe o n√∫mero da casa'),[m
[32m+[m[32m  numero: z.coerce.string().nonempty('Informe o n√∫mero da casa'),[m
   uf: z.string().nonempty('Informe o estado do cliente')[m
 });[m
 [m
[1mdiff --git a/src/services/client.ts b/src/services/client.ts[m
[1mindex 145d116..5a7ff3a 100644[m
[1m--- a/src/services/client.ts[m
[1m+++ b/src/services/client.ts[m
[36m@@ -36,8 +36,8 @@[m [mexport const clientRequests = {[m
         throw new Error('Algo deu errado no servidor!');[m
       }[m
       return request;[m
[31m-    } catch (err: any) {[m
[31m-      throw new Error(err);[m
[32m+[m[32m    } catch (err) {[m
[32m+[m[32m      if (err instanceof Error) throw new Error(err.message);[m
     }[m
   },[m
 [m
[1mdiff --git a/src/typings/tableCrud.ts b/src/typings/tableCrud.ts[m
[1mindex 2a39c49..706c12f 100644[m
[1m--- a/src/typings/tableCrud.ts[m
[1m+++ b/src/typings/tableCrud.ts[m
[36m@@ -1,6 +1,6 @@[m
 import { Dispatch, SetStateAction } from 'react';[m
 [m
[31m-import { MRT_Row } from 'material-react-table';[m
[32m+[m[32mimport { type MRT_Row } from 'material-react-table';[m
 [m
 import { Client } from '../schemas/clientSchema';[m
 [m
